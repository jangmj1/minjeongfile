/*
	함수:
		1. 함:상자	수:숫자
			-상자 안에 들어있는 수
			-누군가 미리 넣어둔 수
			-미리 정의된[만들어진] 수/코드
			
		2.역할
			1. 재활용성:한번 만들면 반복적으로 사용가능
			2. 주의할점:(정의된 인수의 개수와 동일])
				function 함수 ㅌ
				
			2.인수/반환: 인수에 따른 서로 다른 반환값을 얻을수 있따	
				인수:들어갈 수/코드:상자 안으로 들어오는 수
				반환:나오는 수/코드:상자 밖으로 나가는 수
				-함수가 종료되면서 돌려주는 깂[turn 안하면 그 안에 있는 메모리 다 사라짐]
			
			3.메모리의 효율성이 좋다:함수{}안에서 실행되고 끝나면 메모리 초기화
 		
 		3.함수 선언 방법
 			1.function 함수명(인수1,인수2,인수3),{
				 
				 코드정의
				 return 값;
				 
			 }
		4.함수호출방법
			1. 함수명(인수2,인수3,인수3)	 
		5.규칙
			
 
 */

 //1.함수의 선언[1.재활용성]
 console.log(2*1)
 console.log(2*2)
 console.log(2*3)
 console.log(2*4)
 console.log(2*5)
 
 
 function 함수(x){console.log(2*x)}
 console.log(2*2)
 함수(1)
 
 
 function 함수2(x,y){//인수[함수 안으로 들어오는 수/코드] //정의
	 console.log("함수2에서 실행된 결과"+x+y)
		 
	 }//함수 end
함수2(3,5) //사용					//함수호출시 =함수명(전달할 인수,전달할 인수)
함수2(9,8) 				

 //3. 함수의 반환
 function 함수3(x,y,z){//인수 3개 함수 정의
 	let 결과=x+y+z;//함수 정의
 	return 결과;
	 
 }
 /*console.log(결과)*///결과값이 안나온다
 let 결과=함수3(1,2,3)
console.log('함수 실행후 return[반환값] 출력:'+결과)
 
 
 
 
 
 